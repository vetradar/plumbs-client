{"version":3,"sources":["../src/index.ts"],"names":["Axios","PlumbsClient","apiKey","targetUrl","options","content_id","src_default"],"mappings":"AAAA,OAAS,SAAAA,MAAa,QAiBtB,IAAMC,EAAN,KAAmB,CASf,YAAYC,EAAgB,CAP5B,KAAiB,SAAmB,gCAQhC,GAA4BA,GAAW,MAAQA,IAAW,GACtD,MAAM,IAAI,MAAM,qBAAqB,EAGzC,KAAK,QAAUA,EAEf,KAAK,MAAQ,IAAIF,EAAM,CACnB,QAAS,KAAK,SACd,QAAS,CACL,cAAe,WAAW,KAAK,OAAO,GACtC,eAAgB,kBACpB,CACJ,CAAC,CACL,CAEA,MAAO,CACH,MAAO,CAKH,cAAgBG,GACL,KAAK,MAAM,KAGhB,uBAAwB,CAAE,UAAAA,CAAU,CAAC,CAE/C,CACJ,CAEA,WAAY,CACR,MAAO,CAKH,QAAUC,GACC,KAAK,MAAM,IAEhB,qBAAsB,CAAE,OAAQA,CAAQ,CAAC,EAO/C,QAAUC,GACC,KAAK,MAAM,IACd,sBAAsBA,CAAU,EACpC,CAER,CACJ,CAEA,MAAO,CACH,MAAO,CAKH,QAAUD,GACC,KAAK,MAAM,IAEhB,2BAA4B,CAAE,OAAQA,CAAQ,CAAC,EAOrD,QAAUC,GACC,KAAK,MAAM,IACd,2BAA2BA,CAAU,EACzC,CAER,CACJ,CAEA,WAAY,CACR,MAAO,CAKH,QAAUD,GACC,KAAK,MAAM,IAEhB,sBAAuB,CAAE,OAAQA,CAAQ,CAAC,EAOhD,QAAUC,GACC,KAAK,MAAM,IACd,sBAAsBA,CAAU,EACpC,CAER,CACJ,CAEA,cAAe,CACX,MAAO,CAKH,QAAUD,GACC,KAAK,MAAM,IAEhB,2BAA4B,CAAE,OAAQA,CAAQ,CAAC,EAOrD,QAAUC,GACC,KAAK,MAAM,IACd,2BAA2BA,CAAU,EACzC,CAER,CACJ,CAEA,iBAAkB,CACd,MAAO,CAKH,QAAUD,GACC,KAAK,MAAM,IAEhB,wCAAyC,CAAE,OAAQA,CAAQ,CAAC,EAOlE,QAAUC,GACC,KAAK,MAAM,IACd,wCAAwCA,CAAU,EACtD,CAER,CACJ,CACJ,EAEOC,EAAQL","sourcesContent":["import { Axios } from 'axios'\nimport type {\n    AuthAutoLoginRequest,\n    AuthAutoLoginResponse,\n    PlumbsGetListOptions,\n    PlumbsAlgorithmResponse,\n    PlumbsDxTxResponse,\n    PlumbsPagingListResponse,\n    PlumbsMonographResponse,\n    PlumbsDxTxFullResponse,\n    PlumbsMonographFullResponse,\n    PlumbsPatientGuideResponse,\n    PlumbsPatientGuideFullResponse,\n    PlumbsMedicationGuideFullResponse,\n    PlumbsMedicationGuideResponse,\n} from './types'\n\nclass PlumbsClient {\n    private readonly _apiKey: string\n    private readonly _baseUrl: string = 'https://app.plumbs.com/api/v2'\n    private axios: Axios\n\n    /**\n     * Plumbs API Client\n     * @param apiKey Your Plumb's API Key\n     */\n    constructor(apiKey: string) {\n        if (apiKey === undefined || apiKey === null || apiKey === '') {\n            throw new Error('API Key is required')\n        }\n\n        this._apiKey = apiKey\n\n        this.axios = new Axios({\n            baseURL: this._baseUrl,\n            headers: {\n                Authorization: `Api-Key ${this._apiKey}`,\n                \"Content-Type\": \"application/json\",\n            },\n        })\n    }\n\n    auth() {\n        return {\n            /**\n             * This integration allows you to sign into Plumb's via your external program and Plumb's Api Key.\n             * @param targetUrl\n             */\n            autologinLink: (targetUrl: string) => {\n                return this.axios.post<\n                    AuthAutoLoginRequest,\n                    AuthAutoLoginResponse\n                >('/auth/autologin-link', { targetUrl })\n            },\n        }\n    }\n\n    algorithm() {\n        return {\n            /**\n             * Get algorithm data list with pagination.\n             * @param options Optional parameters\n             */\n            getList: (options?: PlumbsGetListOptions) => {\n                return this.axios.get<\n                    PlumbsPagingListResponse<PlumbsGetListOptions>\n                >('contents/algorithm', { params: options })\n            },\n\n            /**\n             * Get algorithm data for given ID.\n             * @param content_id\n             */\n            getById: (content_id: string) => {\n                return this.axios.get<PlumbsAlgorithmResponse>(\n                    `contents/algorithm/${content_id}`,\n                )\n            },\n        }\n    }\n\n    dxtx() {\n        return {\n            /**\n             * Get dx & tx data list with pagination.\n             * @param options Optional parameters\n             */\n            getList: (options?: PlumbsGetListOptions) => {\n                return this.axios.get<\n                    PlumbsPagingListResponse<PlumbsDxTxResponse>\n                >('contents/clinical-brief/', { params: options })\n            },\n\n            /**\n             * Get dx & tx data for given ID.\n             * @param content_id\n             */\n            getById: (content_id: string) => {\n                return this.axios.get<PlumbsDxTxFullResponse>(\n                    `contents/clinical-brief/${content_id}`,\n                )\n            },\n        }\n    }\n\n    monograph() {\n        return {\n            /**\n             * Get monograph data list with pagination.\n             * @param options Optional parameters\n             */\n            getList: (options?: PlumbsGetListOptions) => {\n                return this.axios.get<\n                    PlumbsPagingListResponse<PlumbsMonographResponse>\n                >('contents/monograph/', { params: options })\n            },\n\n            /**\n             * Get monograph data for given ID.\n             * @param content_id\n             */\n            getById: (content_id: string) => {\n                return this.axios.get<PlumbsMonographFullResponse>(\n                    `contents/monograph/${content_id}`,\n                )\n            },\n        }\n    }\n\n    patientGuide() {\n        return {\n            /**\n             * Get patient guide data list with pagination.\n             * @param options Optional parameters\n             */\n            getList: (options?: PlumbsGetListOptions) => {\n                return this.axios.get<\n                    PlumbsPagingListResponse<PlumbsPatientGuideResponse>\n                >('contents/patient-guides/', { params: options })\n            },\n\n            /**\n             * Get patient guide data for given ID.\n             * @param content_id\n             */\n            getById: (content_id: string) => {\n                return this.axios.get<PlumbsPatientGuideFullResponse>(\n                    `contents/patient-guides/${content_id}`,\n                )\n            },\n        }\n    }\n\n    medicationGuide() {\n        return {\n            /**\n             * Get medication guide data list with pagination.\n             * @param options Optional parameters\n             */\n            getList: (options?: PlumbsGetListOptions) => {\n                return this.axios.get<\n                    PlumbsPagingListResponse<PlumbsMedicationGuideResponse>\n                >('contents/veterinary-medication-guide/', { params: options })\n            },\n\n            /**\n             * Get medication guide data for given ID.\n             * @param content_id\n             */\n            getById: (content_id: string) => {\n                return this.axios.get<PlumbsMedicationGuideFullResponse>(\n                    `contents/veterinary-medication-guide/${content_id}`,\n                )\n            },\n        }\n    }\n}\n\nexport default PlumbsClient\n"]}